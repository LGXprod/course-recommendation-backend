service: course-recommendation-backend
frameworkVersion: '2'
plugins:
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs12.x
  profile: ${env:PROFILE_NAME}
  stage: dev
  region: ap-southeast-2
  vpc:
    securityGroupIds:
      - sg-38840175
    subnetIds:
      - subnet-d3d5129b
      - subnet-1d42887b
      - subnet-870c48df
  environment:
    DB_USERNAME: ${env:DB_USERNAME}
    DB_PASSWORD: ${env:DB_PASSWORD}
    HOST: ${env:HOST}
    REC_API_KEY: ${env:REC_API_KEY}

package:
 exclude:
   - lambda/local/
   - rds/
   - scripts/
   - KNN-prototype/

functions:
  getStudent:
    handler: lambda/getStudent.handler
    events:
      - http:
          path: student/{session_id}
          method: GET
          cors: true
  # createStudent:
  #   handler: lambda/createStudent.handler
  #   events:
  #     - http:
  #         path: student
  #         method: POST
  #         cors: true
  createSession:
    handler: lambda/createSession.handler
    events:
      - http:
          path: session
          method: POST
          cors: true
  deleteSession:
    handler: lambda/deleteSession.handler
    events:
      - http:
          path: session
          method: DELETE
          cors: true
  createRecommendation:
    handler: lambda/createRecommendation.handler
    events:
      - http:
          path: recommendation
          method: POST
          cors:
            origins:
              - '*'
            headers:
              - X-Session_id
            allowCredentials: false
  generateRecommendation:
    runtime: python3.8
    handler: lambda/rec_handler.generateRecommendation
    events:
      - http:
          path: generate-recommendation
          method: POST
          cors: true
